// Generated by commsdsl2tools_qt v6.3.0

#pragma once

#include <tuple>
#include "cc_tools_qt_plugin/cc_mqtt5/message/Auth.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Connack.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Connect.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Disconnect.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Pingreq.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Pingresp.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Puback.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Pubcomp.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Publish.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Pubrec.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Pubrel.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Suback.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Subscribe.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Unsuback.h"
#include "cc_tools_qt_plugin/cc_mqtt5/message/Unsubscribe.h"

namespace cc_tools_qt_plugin
{

namespace cc_mqtt5
{

namespace input
{

using AllMessages =
    std::tuple<
        cc_tools_qt_plugin::cc_mqtt5::message::Connect,
        cc_tools_qt_plugin::cc_mqtt5::message::Connack,
        cc_tools_qt_plugin::cc_mqtt5::message::Publish,
        cc_tools_qt_plugin::cc_mqtt5::message::Puback,
        cc_tools_qt_plugin::cc_mqtt5::message::Pubrec,
        cc_tools_qt_plugin::cc_mqtt5::message::Pubrel,
        cc_tools_qt_plugin::cc_mqtt5::message::Pubcomp,
        cc_tools_qt_plugin::cc_mqtt5::message::Subscribe,
        cc_tools_qt_plugin::cc_mqtt5::message::Suback,
        cc_tools_qt_plugin::cc_mqtt5::message::Unsubscribe,
        cc_tools_qt_plugin::cc_mqtt5::message::Unsuback,
        cc_tools_qt_plugin::cc_mqtt5::message::Pingreq,
        cc_tools_qt_plugin::cc_mqtt5::message::Pingresp,
        cc_tools_qt_plugin::cc_mqtt5::message::Disconnect,
        cc_tools_qt_plugin::cc_mqtt5::message::Auth
    >;

} // namespace input

} // namespace cc_mqtt5

} // namespace cc_tools_qt_plugin
