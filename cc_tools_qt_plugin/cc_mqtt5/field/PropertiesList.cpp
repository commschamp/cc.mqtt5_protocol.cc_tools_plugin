// Generated by commsdsl2tools_qt v6.3.2

#include "PropertiesList.h"

#include "cc_mqtt5/field/PropertiesList.h"
#include "cc_mqtt5/field/Property.h"
#include "cc_tools_qt/property/field.h"
#include "cc_tools_qt_plugin/cc_mqtt5/field/BinData.h"
#include "cc_tools_qt_plugin/cc_mqtt5/field/EnableEnum.h"
#include "cc_tools_qt_plugin/cc_mqtt5/field/Property.h"
#include "cc_tools_qt_plugin/cc_mqtt5/field/Qos.h"
#include "cc_tools_qt_plugin/cc_mqtt5/field/String.h"
#include "cc_tools_qt_plugin/cc_mqtt5/field/VarLenInt.h"
#include "cc_tools_qt_plugin/cc_mqtt5/options/DefaultOptions.h"

namespace cc_tools_qt_plugin
{

namespace cc_mqtt5
{

namespace field
{

QVariantMap createProps_propertiesList(const char* name, bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_mqtt5::field::PropertiesList<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(name)
            .serialisedHidden(serHidden)
            .serialisedHidden()
            .add(cc_tools_qt_plugin::cc_mqtt5::field::createProps_property(Field::ValueType::value_type::name(), serHidden))
            .prefixName("Length")
            .showPrefix()
            .appendIndexToElementName()
            .asMap();
}

} // namespace field

} // namespace cc_mqtt5

} // namespace cc_tools_qt_plugin
