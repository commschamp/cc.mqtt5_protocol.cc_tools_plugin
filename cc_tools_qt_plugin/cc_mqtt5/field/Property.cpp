// Generated by commsdsl2tools_qt v6.3.4

#include "Property.h"

#include "cc_mqtt5/field/Property.h"
#include "cc_tools_qt/property/field.h"
#include "cc_tools_qt_plugin/cc_mqtt5/field/BinData.h"
#include "cc_tools_qt_plugin/cc_mqtt5/field/EnableEnum.h"
#include "cc_tools_qt_plugin/cc_mqtt5/field/Qos.h"
#include "cc_tools_qt_plugin/cc_mqtt5/field/String.h"
#include "cc_tools_qt_plugin/cc_mqtt5/field/VarLenInt.h"
#include "cc_tools_qt_plugin/cc_mqtt5/options/DefaultOptions.h"

namespace cc_tools_qt_plugin
{

namespace cc_mqtt5
{

namespace field
{

namespace
{

struct PropertyMembers
{
    struct PayloadFormatIndicatorMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::PayloadFormatIndicatorMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::PayloadFormatIndicatorMembers::Value;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .add("Unspecified", 0)
                    .add("UTF-8", 1)
                    .asMap();
        }
    }; // struct PayloadFormatIndicatorMembers

    static QVariantMap createProps_payloadFormatIndicator(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::PayloadFormatIndicator;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(PayloadFormatIndicatorMembers::createProps_id(serHidden))
                .add(PayloadFormatIndicatorMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct MessageExpiryIntervalMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::MessageExpiryIntervalMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::MessageExpiryIntervalMembers::Value;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .asMap();
        }
    }; // struct MessageExpiryIntervalMembers

    static QVariantMap createProps_messageExpiryInterval(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::MessageExpiryInterval;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(MessageExpiryIntervalMembers::createProps_id(serHidden))
                .add(MessageExpiryIntervalMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct ContentTypeMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ContentTypeMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ContentTypeMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_string(Field::name(), serHidden);
            return props;
        }
    }; // struct ContentTypeMembers

    static QVariantMap createProps_contentType(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ContentType;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(ContentTypeMembers::createProps_id(serHidden))
                .add(ContentTypeMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct ResponseTopicMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ResponseTopicMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ResponseTopicMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_string(Field::name(), serHidden);
            return props;
        }
    }; // struct ResponseTopicMembers

    static QVariantMap createProps_responseTopic(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ResponseTopic;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(ResponseTopicMembers::createProps_id(serHidden))
                .add(ResponseTopicMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct CorrelationDataMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::CorrelationDataMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::CorrelationDataMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_binData(Field::name(), serHidden);
            return props;
        }
    }; // struct CorrelationDataMembers

    static QVariantMap createProps_correlationData(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::CorrelationData;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(CorrelationDataMembers::createProps_id(serHidden))
                .add(CorrelationDataMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct SubscriptionIdMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SubscriptionIdMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SubscriptionIdMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_varLenInt(Field::name(), serHidden);
            return props;
        }
    }; // struct SubscriptionIdMembers

    static QVariantMap createProps_subscriptionId(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SubscriptionId;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(SubscriptionIdMembers::createProps_id(serHidden))
                .add(SubscriptionIdMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct SessionExpiryIntervalMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SessionExpiryIntervalMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SessionExpiryIntervalMembers::Value;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .addSpecial("Infinite", 0xffffffffLL)
                    .asMap();
        }
    }; // struct SessionExpiryIntervalMembers

    static QVariantMap createProps_sessionExpiryInterval(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SessionExpiryInterval;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(SessionExpiryIntervalMembers::createProps_id(serHidden))
                .add(SessionExpiryIntervalMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct AssignedClientIdMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::AssignedClientIdMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::AssignedClientIdMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_string(Field::name(), serHidden);
            return props;
        }
    }; // struct AssignedClientIdMembers

    static QVariantMap createProps_assignedClientId(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::AssignedClientId;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(AssignedClientIdMembers::createProps_id(serHidden))
                .add(AssignedClientIdMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct ServerKeepAliveMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ServerKeepAliveMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ServerKeepAliveMembers::Value;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .asMap();
        }
    }; // struct ServerKeepAliveMembers

    static QVariantMap createProps_serverKeepAlive(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ServerKeepAlive;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(ServerKeepAliveMembers::createProps_id(serHidden))
                .add(ServerKeepAliveMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct AuthMethodMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::AuthMethodMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::AuthMethodMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_string(Field::name(), serHidden);
            return props;
        }
    }; // struct AuthMethodMembers

    static QVariantMap createProps_authMethod(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::AuthMethod;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(AuthMethodMembers::createProps_id(serHidden))
                .add(AuthMethodMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct AuthDataMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::AuthDataMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::AuthDataMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_binData(Field::name(), serHidden);
            return props;
        }
    }; // struct AuthDataMembers

    static QVariantMap createProps_authData(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::AuthData;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(AuthDataMembers::createProps_id(serHidden))
                .add(AuthDataMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct RequestProblemInfoMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::RequestProblemInfoMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::RequestProblemInfoMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_enableEnum(Field::name(), serHidden);
            return props;
        }
    }; // struct RequestProblemInfoMembers

    static QVariantMap createProps_requestProblemInfo(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::RequestProblemInfo;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(RequestProblemInfoMembers::createProps_id(serHidden))
                .add(RequestProblemInfoMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct WillDelayIntervalMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::WillDelayIntervalMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::WillDelayIntervalMembers::Value;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .asMap();
        }
    }; // struct WillDelayIntervalMembers

    static QVariantMap createProps_willDelayInterval(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::WillDelayInterval;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(WillDelayIntervalMembers::createProps_id(serHidden))
                .add(WillDelayIntervalMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct RequestResponseInfoMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::RequestResponseInfoMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::RequestResponseInfoMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_enableEnum(Field::name(), serHidden);
            return props;
        }
    }; // struct RequestResponseInfoMembers

    static QVariantMap createProps_requestResponseInfo(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::RequestResponseInfo;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(RequestResponseInfoMembers::createProps_id(serHidden))
                .add(RequestResponseInfoMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct ResponseInfoMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ResponseInfoMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ResponseInfoMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_string(Field::name(), serHidden);
            return props;
        }
    }; // struct ResponseInfoMembers

    static QVariantMap createProps_responseInfo(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ResponseInfo;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(ResponseInfoMembers::createProps_id(serHidden))
                .add(ResponseInfoMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct ServerRefMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ServerRefMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ServerRefMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_string(Field::name(), serHidden);
            return props;
        }
    }; // struct ServerRefMembers

    static QVariantMap createProps_serverRef(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ServerRef;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(ServerRefMembers::createProps_id(serHidden))
                .add(ServerRefMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct ReasonStrMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ReasonStrMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ReasonStrMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_string(Field::name(), serHidden);
            return props;
        }
    }; // struct ReasonStrMembers

    static QVariantMap createProps_reasonStr(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ReasonStr;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(ReasonStrMembers::createProps_id(serHidden))
                .add(ReasonStrMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct ReceiveMaxMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ReceiveMaxMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ReceiveMaxMembers::Value;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .asMap();
        }
    }; // struct ReceiveMaxMembers

    static QVariantMap createProps_receiveMax(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::ReceiveMax;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(ReceiveMaxMembers::createProps_id(serHidden))
                .add(ReceiveMaxMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct TopicAliasMaxMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::TopicAliasMaxMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::TopicAliasMaxMembers::Value;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .asMap();
        }
    }; // struct TopicAliasMaxMembers

    static QVariantMap createProps_topicAliasMax(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::TopicAliasMax;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(TopicAliasMaxMembers::createProps_id(serHidden))
                .add(TopicAliasMaxMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct TopicAliasMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::TopicAliasMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::TopicAliasMembers::Value;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .asMap();
        }
    }; // struct TopicAliasMembers

    static QVariantMap createProps_topicAlias(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::TopicAlias;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(TopicAliasMembers::createProps_id(serHidden))
                .add(TopicAliasMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct MaxQosMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::MaxQosMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::MaxQosMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_qos(Field::name(), serHidden);
            return props;
        }
    }; // struct MaxQosMembers

    static QVariantMap createProps_maxQos(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::MaxQos;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(MaxQosMembers::createProps_id(serHidden))
                .add(MaxQosMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct RetainAvailableMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::RetainAvailableMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::RetainAvailableMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_enableEnum(Field::name(), serHidden);
            return props;
        }
    }; // struct RetainAvailableMembers

    static QVariantMap createProps_retainAvailable(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::RetainAvailable;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(RetainAvailableMembers::createProps_id(serHidden))
                .add(RetainAvailableMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct UserPropertyMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::UserPropertyMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        struct ValueMembers
        {
            static QVariantMap createProps_first(bool serHidden)
            {
                static_cast<void>(serHidden);
                using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::UserPropertyMembers::ValueMembers::First;
                auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_string(Field::name(), serHidden);
                return props;
            }

            static QVariantMap createProps_second(bool serHidden)
            {
                static_cast<void>(serHidden);
                using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::UserPropertyMembers::ValueMembers::Second;
                auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_string(Field::name(), serHidden);
                return props;
            }
        }; // struct ValueMembers

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::UserPropertyMembers::Value;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .add(ValueMembers::createProps_first(serHidden))
                    .add(ValueMembers::createProps_second(serHidden))
                    .serialisedHidden()
                    .asMap();
        }
    }; // struct UserPropertyMembers

    static QVariantMap createProps_userProperty(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::UserProperty;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(UserPropertyMembers::createProps_id(serHidden))
                .add(UserPropertyMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct MaxPacketSizeMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::MaxPacketSizeMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::MaxPacketSizeMembers::Value;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .asMap();
        }
    }; // struct MaxPacketSizeMembers

    static QVariantMap createProps_maxPacketSize(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::MaxPacketSize;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(MaxPacketSizeMembers::createProps_id(serHidden))
                .add(MaxPacketSizeMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct WildcardSubAvailMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::WildcardSubAvailMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::WildcardSubAvailMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_enableEnum(Field::name(), serHidden);
            return props;
        }
    }; // struct WildcardSubAvailMembers

    static QVariantMap createProps_wildcardSubAvail(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::WildcardSubAvail;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(WildcardSubAvailMembers::createProps_id(serHidden))
                .add(WildcardSubAvailMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct SubIdAvailMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SubIdAvailMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SubIdAvailMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_enableEnum(Field::name(), serHidden);
            return props;
        }
    }; // struct SubIdAvailMembers

    static QVariantMap createProps_subIdAvail(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SubIdAvail;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(SubIdAvailMembers::createProps_id(serHidden))
                .add(SubIdAvailMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }

    struct SharedSubAvailMembers
    {
        static QVariantMap createProps_id(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SharedSubAvailMembers::Id;
            return
                cc_tools_qt::property::field::ForField<Field>()
                    .name(Field::name())
                    .serialisedHidden(serHidden)
                    .readOnly()
                    .asMap();
        }

        static QVariantMap createProps_value(bool serHidden)
        {
            static_cast<void>(serHidden);
            using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SharedSubAvailMembers::Value;
            auto props = cc_tools_qt_plugin::cc_mqtt5::field::createProps_enableEnum(Field::name(), serHidden);
            return props;
        }
    }; // struct SharedSubAvailMembers

    static QVariantMap createProps_sharedSubAvail(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_mqtt5::field::PropertyMembers<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>::SharedSubAvail;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(SharedSubAvailMembers::createProps_id(serHidden))
                .add(SharedSubAvailMembers::createProps_value(serHidden))
                .serialisedHidden()
                .asMap();
    }
}; // struct PropertyMembers

} // namespace

QVariantMap createProps_property(const char* name, bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_mqtt5::field::Property<cc_tools_qt_plugin::cc_mqtt5::options::DefaultOptions>;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(name)
            .serialisedHidden(serHidden)
            .add(PropertyMembers::createProps_payloadFormatIndicator(serHidden))
            .add(PropertyMembers::createProps_messageExpiryInterval(serHidden))
            .add(PropertyMembers::createProps_contentType(serHidden))
            .add(PropertyMembers::createProps_responseTopic(serHidden))
            .add(PropertyMembers::createProps_correlationData(serHidden))
            .add(PropertyMembers::createProps_subscriptionId(serHidden))
            .add(PropertyMembers::createProps_sessionExpiryInterval(serHidden))
            .add(PropertyMembers::createProps_assignedClientId(serHidden))
            .add(PropertyMembers::createProps_serverKeepAlive(serHidden))
            .add(PropertyMembers::createProps_authMethod(serHidden))
            .add(PropertyMembers::createProps_authData(serHidden))
            .add(PropertyMembers::createProps_requestProblemInfo(serHidden))
            .add(PropertyMembers::createProps_willDelayInterval(serHidden))
            .add(PropertyMembers::createProps_requestResponseInfo(serHidden))
            .add(PropertyMembers::createProps_responseInfo(serHidden))
            .add(PropertyMembers::createProps_serverRef(serHidden))
            .add(PropertyMembers::createProps_reasonStr(serHidden))
            .add(PropertyMembers::createProps_receiveMax(serHidden))
            .add(PropertyMembers::createProps_topicAliasMax(serHidden))
            .add(PropertyMembers::createProps_topicAlias(serHidden))
            .add(PropertyMembers::createProps_maxQos(serHidden))
            .add(PropertyMembers::createProps_retainAvailable(serHidden))
            .add(PropertyMembers::createProps_userProperty(serHidden))
            .add(PropertyMembers::createProps_maxPacketSize(serHidden))
            .add(PropertyMembers::createProps_wildcardSubAvail(serHidden))
            .add(PropertyMembers::createProps_subIdAvail(serHidden))
            .add(PropertyMembers::createProps_sharedSubAvail(serHidden))
            .setIndexHidden()
            .serialisedHidden()
            .asMap();
}

} // namespace field

} // namespace cc_mqtt5

} // namespace cc_tools_qt_plugin
